/* $Id: Validation.css 5681 2006-12-18 16:00:32Z smaxim $ */
 *
 * Controls the icons that are displayed according to the specified rules, 
 * depending on the validity of the data entered
 *
 *
 "zpStatusImg" class images for form fields -- apply appropriate rules here.
 The script auto-applies one of each of these CLASS attributes to a series of
        nested <span>s with an innermost .zpStatusImg class <span> we style:
 1) "zpIsRequired" or "zpNotRequired".
 2) "zpIsEmpty" or "zpNotEmpty".
 3) "zpIsEditing" or "zpNotEditing".
 4) "zpIsValid" or "zpNotValid".
 5) Always "zpStatusImg", this is the one styled.
*/

* html span.zpStatusImg {
 /* MSIE fix to force "hasLayout" for opacity. */
 display: inline-block;
}


/*
 * Controls the look and feel of the form
 */

.zpFormValidation .errOutput{
  	display: none;
	padding-left: 55px;
	font-weight: bold;
	font-size: 13px;
	font-family: Arial, Helvetica, sans-serif;
}
.zpFormValidation .fieldError {
        font-weight: bold;
}
.zpFormValidation .zpFormError{ /* text: this field is required style */
	color: #F73460;
	padding-left: 10px;
	font-weight: normal;
	vertical-align: top;
	line-height: 20px; 
	display: inline-block
}


span.zpStatusImg {
 padding: 0px 8px;
 background-repeat: no-repeat;
 background-position: center;
 opacity: 0.66;
 filter: alpha(opacity=66);
}

.zpFormValidation .zpStatusImg  { /* Container for field status image */
        background-repeat: no-repeat;
        background-position: right;
        opacity: 0.66;
        filter: alpha(opacity=66);
        display: inline-block;
        vertical-align: top;
        padding-bottom: 5px; /* Fixes alignment of asterisk ->  don't remove! */
}

.zpFormValidation .zpCheckboxStatusImg,
.zpFormValidation .zpRadioStatusImg {   /* Container for checkbox and radio status images */      
        background-repeat: no-repeat;
        background-position: right;
        opacity: 100;
        filter: alpha(opacity=100);
        display: inline-block;
        vertical-align: top;
}
 

.zpFormValidation .zpIsEditing .zpStatusImg {   /* properties of status image while editing field */
        opacity: 1.0;
        filter: alpha(opacity=100);
}

.zpFormValidation .zpIsRequired .zpStatusImg,
.zpFormValidation .zpIsRequired .zpCheckboxStatusImg,
.zpFormValidation .zpIsRequired .zpRadioStatusImg {   /* image: if field is required */
        background-image: url(icons/required.gif);
}


.zpFormValidation .zpIsRequired .zpNotEmpty .zpNotValid .zpStatusImg,
.zpFormValidation .zpIsRequired .zpNotEmpty .zpNotValid .zpCheckboxStatusImg,
.zpFormValidation .zpIsRequired .zpNotEmpty .zpNotValid .zpRadioStatusImg {  /* image: shown if requred field have ivalid format */
        background-image: url(icons/required_invalid.gif);
}

.zpFormValidation .zpNotEmpty .zpNotValid .zpStatusImg,
.zpFormValidation .zpNotEmpty .zpNotValid .zpCheckboxStatusImg,
.zpFormValidation .zpNotEmpty .zpNotValid .zpRadioStatusImg { /* image: shown if requred fileld is invalid */
        background-image: url(icons/required_invalid.gif);
}

.zpFormValidation .zpIsValid .zpStatusImg,
.zpFormValidation .zpIsValid .zpCheckboxStatusImg,
.zpFormValidation .zpIsValid .zpRadioStatusImg {  /* image: if requred field is valid */
        background-image: url(icons/validated.gif);
}

.zpFormValidation .zpIsFetching .zpStatusImg,
.zpFormValidation .zpIsFetching .zpCheckboxStatusImg,
.zpFormValidation .zpIsFetching .zpRadioStatusImg { /* shown while inputing into field */
        background-image: url(icons/fetching.gif) !important;
}


.zpFormValidation textarea {  
}

.zpFormValidation .zpFormLabel { /* style for form fields labels */
		padding: 0px 15px;
		margin:0;
		height:1px;

}

.zpFormValidation .zpFormLabelx { /* style for form fields labels */
		padding: 0 0 0 15px;
		margin:0;
		height:1px;
}

.zpFormValidation .zpExpandedTable, 
.zpFormValidation .zpExpandedTable td,  
.zpFormValidation .zpExpandedTable th  {  
        border-collapse:collapse;                        
}

.zpFormValidation .zpExpandedTable span { /* fixes the table cell height error, caused by invisible spans */
        display:none;
}

.zpFormValidation .zpExpandedTable .multipleButton { /* multiply button in table container */
}

.zpFormValidation .multipleButton{  /* style for field multiply button (if present) */
        text-align: center;
}

.zpFormValidation {  /* Common form properties */
}

.zpFormValidation .zpFormContent{ /* Form content container style */
       
}


.zpFormValidation select {
}

*+html .zpFormValidation select {
        height:auto;
}

/* Dropdown styles */
 .zpFormValidation .dropDownArrow { /* IE7 */
        height: 20px;
        background-image: url(basic/down_arrow_hilite.gif);
        padding: 0px 12px;
        background-repeat: no-repeat;
        margin-left:-1px;
        margin-top:1px;
        display: inline-block;
        cursor: pointer;
		z-index: -1;
}

 .zpFormValidation .dropDownArrow { /* other */
        background-image: url(basic/down_arrow.gif);
        padding:10px 10px;
        padding-top:0px;
        background-repeat: no-repeat;
        margin-left:-1px;
        display: inline;
		z-index: -1;
        vertical-align:top;
        cursor: pointer;
} 

 * html .zpFormValidation .dropDownArrow { /* IE6 */
        height: 20px;
        background-image: url(basic/down_arrow_hilite.gif);
        padding: 0px 12px;
        background-repeat: no-repeat;
        margin-left:-1px;
        margin-top:1px;
        display: inline-block;
		z-index: -1;
        cursor: pointer;
}

.zpFormValidation .dropDownArrow:hover,
	  .zpFormValidation .dropDownArrow:active
		  .zpFormValidation .dropDownArrow:focus {
        background-image: url(basic/down_arrow_hilite.gif);
} 


/* end of dropdown styles */
.zpFormValidation input {
        background:#FFFFFF;
        width:auto;
}

.zpFormValidation .zpRadioLabel { /* label for checkbox and radio elements */
        vertical-align:top;
}
 
.zpFormValidation .zpFormCheckbox { /* checkbox style */
        border:none !important;
        padding:0px;
        margin:0px;
        width:auto;
        background:none;
}

.zpFormValidation .zpFormRadio {  /* radio style */
        border:none;
        padding:0px;
        margin:0px;
        width:auto;
        background:none;
}

* html .zpFormValidation .zpFormCheckbox { /* ie6 checkbox style */
        
}
       
* html .zpFormValidation .zpFormRadio { /* ie6 radio style */
        
}


*+html .zpFormValidation .zpFormCheckbox { /* ie7 checkbox style */
        
}
       
*+html .zpFormValidation .zpFormRadio { /* ie7 radio style */
       
}

.zpFormValidation .zpWrongValue{ /* highlighting field when trying to input not allowed symbol */
        background-color: #EA888C !important;
}

.zpFormValidation .zpCommonStatusImg {
		 padding: 0px 6px;
		 height: 18px;
		 line-height: 18px;
		 background-repeat: no-repeat;
		 background-position: center;
		 opacity: 0.66;
		 filter: alpha(opacity=66);
		 margin-left:5px;
		 display: inline-block;
		 float: none;
}

.zpFormValidation .zpIsEditing .zpCommonStatusImg {
 opacity: 1.0;
 filter: alpha(opacity=100);
}

.zpFormValidation .zpIsRequired .zpCommonStatusImg {
 	background-image: url(icons/required.gif);
 	vertical-align: top;
 	padding-top: 5px; /* Fix alignment of required icon*/
}

.zpFormValidation .zpIsEditing .zpNotEmpty .zpCommonStatusImg {
 background-image: url(icons/editing.gif);
}

.zpFormValidation .zpNotEditing .zpNotEmpty .zpNotValid .zpCommonStatusImg {
 background-image: url(icons/required_invalid.gif);
}

.zpFormValidation .zpIsValid .zpCommonStatusImg {
 background-image: url(icons/validated.gif);
}

.zpFormValidation .zpIsFetching .zpCommonStatusImg {
        background-image: url(icons/fetching.gif) !important;
}

